name: SonarQube analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read  # Permet à SonarQube de décorer les PRs avec les résultats de l'analyse.

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests and generate coverage report
        run: npm test -- --coverage

      - name: Analyze with SonarQube
        uses: SonarSource/sonarqube-scan-action@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Nécessaire pour obtenir les informations des PRs
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Le token généré dans SonarQube, ajouté aux secrets du dépôt
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # URL de votre instance SonarQube, ajoutée aux secrets du dépôt
        with:
          args: |
            -Dsonar.projectKey=webcomponentrepo   # Remplacez par la clé de votre projet SonarQube
            -Dsonar.sources=src             # Chemin vers le dossier des sources (exemple : "src" pour Angular)
            -Dsonar.exclusions=**/node_modules/**,src/assets/**  # Exclusions
            -Dsonar.tests=src               # Chemin vers le dossier des tests
            -Dsonar.test.inclusions=**/*.spec.ts  # Inclure tous les fichiers de test TypeScript
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info  # Chemin vers le fichier de couverture généré
            -Dsonar.sourceEncoding=UTF-8    # Encodage des fichiers sources

